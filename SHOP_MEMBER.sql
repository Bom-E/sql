-- 쇼핑몰 프로젝트 테이블

-- 회원 정보 테이블
CREATE TABLE SHOP_MEMBER(
   MEMBER_ID VARCHAR(20) PRIMARY KEY
   , MEMBER_PW VARCHAR(20) NOT NULL
   , MEMBER_NAME VARCHAR(20) NOT NULL
   , GENDER VARCHAR(10) NOT NULL -- male, female
   , MEMBER_EMAIL VARCHAR(50) NOT NULL UNIQUE
   , MEMBER_TEL VARCHAR(20) -- 010-1111-2222
   , MEMBER_ADDR VARCHAR(50)
   , ADDR_DETAIL VARCHAR(50)
   , POST_CODE VARCHAR(10) -- 44951
   , JOIN_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
   , MEMBER_ROLL VARCHAR(20) DEFAULT 'USER' -- 권한 USER ADMIN
);

SELECT * FROM item_image;

-- 상품 카테고리 정보 테이블
CREATE TABLE ITEM_CATEGORY (
   CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
   , CATE_NAME VARCHAR(50) NOT NULL UNIQUE
);

INSERT INTO ITEM_CATEGORY VALUES(1, 'IT/인터넷');
INSERT INTO ITEM_CATEGORY VALUES(2, '소설/에세이');
INSERT INTO ITEM_CATEGORY VALUES(3, '문화/여행');
COMMIT;

DROP TABLE item_category;

SELECT *
FROM item_category;

-- 상품 정보 테이블
CREATE TABLE SHOP_ITEM (
   ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
   , ITEM_NAME VARCHAR(50) NOT NULL UNIQUE
   , ITEM_PRICE INT NOT NULL
   , ITEM_STOCK INT DEFAULT 10
   , ITEM_INTRO VARCHAR(100)
   , REG_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
   , CATE_CODE INT NOT NULL REFERENCES ITEM_CATEGORY(CATE_CODE)
);

-- 준비 중 : 1, 판매 중 : 2, 매진 : 3
ALTER TABLE shop_item ADD COLUMN ITEM_STATUS INT DEFAULT 1;
ALTER TABLE shop_item DROP COLUMN ITEM_STATUS;

SELECT ITEM_CODE
	, ITEM_NAME
	, ITEM_STOCK
	, ITEM_STATUS
	, IF(ITEM_STATUS = 1, '준비중', IF(ITEM_STATUS = 2, '판매중', '매진')) '상태1'
	, CASE 
		WHEN ITEM_STATUS = 1 THEN '준비중'
		WHEN ITEM_STATUS = 2 THEN '판매중'
		ELSE '매진'
		END AS '상태2'
FROM shop_item;

DELETE FROM shop_item
WHERE ITEM_CODE = 6;

SELECT CATE_NAME
	, CATE.CATE_CODE
	, ITEM_NAME
	, ITEM_STOCK
	, ITEM_STATUS
	, ITEM.ITEM_CODE
	, ATTACHED_FILE_NAME
	, ORIGIN_FILE_NAME
	, IMG_CODE
FROM shop_item ITEM
INNER JOIN item_category CATE
ON ITEM.CATE_CODE = CATE.CATE_CODE
INNER JOIN item_image IMG
ON ITEM.ITEM_CODE = IMG.ITEM_CODE
WHERE ITEM.ITEM_CODE = 1;

SELECT *
FROM shop_item;

COMMIT;

UPDATE SHOP_ITEM 
SET ITEM_STATUS = 2;

-- 상품의 이미지 정보를 관리하는 테이블
CREATE TABLE ITEM_IMAGE (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, IS_MAIN VARCHAR(2) NOT NULL -- 'Y', 'N'
	, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE)
);

-- 장바구니 정보 테이블
CREATE TABLE SHOP_CART(
	CART_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_CODE INT NOT NULL REFERENCES shop_item(ITEM_CODE)
	, MEMBER_ID VARCHAR(20) NOT NULL REFERENCES shop_member(MEMBER_ID)
	, CART_CNT INT NOT NULL
	, CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 구매 정보 테이블
CREATE TABLE SHOP_BUY(
	BUY_CODE INT AUTO_INCREMENT PRIMARY KEY
	, MEMBER_ID VARCHAR(20) NOT NULL REFERENCES shop_member (MEMBER_ID)
	, BUY_PRICE INT NOT NULL
	, BUY_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 구매 상세 정보 테이블
CREATE TABLE BUY_DETAIL(
	BUY_DETAIL_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE)
	, BUY_CNT INT NOT NULL
	, TOTAL_PRICE INT NOT NULL
	, BUY_CODE INT NOT NULL REFERENCES SHOP_BUY (BUY_CODE)
);

SELECT * 
FROM cart_view;

SELECT *
FROM shop_cart;

SELECT CART.ITEM_CODE
	, CART_CNT AS BUY_CNT
	, ITEM_PRICE * CART_CNT
FROM shop_cart CART INNER JOIN shop_item ITEM
ON CART.ITEM_CODE = ITEM.ITEM_CODE
WHERE CART_CODE IN (8, 12, 13);

SELECT ITEM_CODE
	, CART_CNT
	, TOTAL_PRICE
FROM cart_view
WHERE CART_CODE IN (8, 12);

-- 상품명, 가격, 개수, 총가격
SELECT ITEM_NAME
	, ITEM_PRICE
	, CART_CNT
	, ITEM_PRICE * CART_CNT
FROM shop_cart SC INNER JOIN shop_item SI
ON SC.ITEM_CODE = SI.ITEM_CODE
ON SC.MEMBER_ID = SM.MEMBER_ID
WHERE CART_CODE = 2;

-- 회원 아이디가 'java'인 회원의
-- 장바구니에 담긴 장바구니 목록을 목록을 조회
-- 장바구니 코드, 대표이미지명(첨부된 파일명)
-- 상품명, 가격, 개수, 총가격
-- 다중 이너조인
SELECT CART_CODE
	, ITEM_PRICE
	, CART_CNT
	, CART_CNT * ITEM_PRICE TOTAL_PRICE
FROM shop_cart CART 
INNER JOIN shop_item ITEM 
ON CART.ITEM_CODE = ITEM.ITEM_CODE
INNER JOIN ITEM_IMAGE IMG
ON CART.ITEM_CODE = IMG.ITEM_CODE
WHERE MEMBER_ID = 'java'
AND IS_MAIN = 'Y';

SELECT *
FROM SHOP_CART;

-- 다중 등록
INSERT INTO ITEM_IMAGE (
	IMG_CODE
	, ORIGIN_FILE_NAME
	, ATTACHED_FILE_NAME
	, IS_MAIN
	, ITEM_CODE
) VALUES 
(1, 'aa.jpg', 'aaa.jpg', 'Y', 9), 
(2, 'bb.jpg', 'bbb.jpg', 'N', 9), 
(3, 'cc.jpg', 'ccc.jpg', 'N', 9);

COMMIT;

-- 다음에 들어갈 ITEM_CODE를 조회
-- 현재 등록 된 ITEM_CODE 중 가장 큰 값을 구한 후 + 1
SELECT IFNULL(MAX(ITEM_CODE), 0) + 1 FROM shop_item;

SELECT *
FROM ITEM_IMAGE;

DROP TABLE shop_item;

DELETE FROM shop_item
WHERE ITEM_CODE = 8;

UPDATE SHOP_ITEM
SET ITEM_CODE = 1
WHERE ITEM_CODE = 9;

SELECT *
FROM SHOP_ITEM;

COMMIT;

SELECT *
FROM shop_member;

DELETE FROM shop_item; 

DELETE FROM item_image;

UPDATE SHOP_ITEM
SET MEMBER_NAME = 'java'
WHERE MEMBER_NAME = '홍';

SELECT COMM 
	, IFNULL(COMM, 0)
FROM emp;

SELECT SI.ITEM_CODE
   , ITEM_NAME
   , ITEM_PRICE
   , ATTACHED_FILE_NAME
FROM SHOP_ITEM SI INNER JOIN ITEM_IMAGE II
ON SI.ITEM_CODE = II.ITEM_CODE
WHERE IS_MAIN = 'Y'
ORDER BY REG_DATE DESC;

-- 상품 상세 정보 조회
-- ITEM_CODE, ITEM_NAME, ITEM_PRICE, ITEM_INTRO
-- ATTACHED_FILE_NAME

SELECT ITEM.ITEM_CODE
	, ITEM_NAME
	, ITEM_PRICE
	, ITEM_INTRO
	, ATTACHED_FILE_NAME
FROM shop_item ITEM INNER JOIN item_image IMG
ON ITEM.ITEM_CODE = IMG.ITEM_CODE
WHERE ITEM.ITEM_CODE = 1;

-- 장바구니와 관련된 모든 정보를 조회 할 수 있는 VIEW 생성
CREATE OR REPLACE VIEW CART_VIEW 
AS
SELECT 
	-- 카트 테이블 조회 
	CART_CODE
	, CART.ITEM_CODE
	, CART.MEMBER_ID
	, CART_CNT
	, CART_DATE
	-- 상품 테이블 조회
	, ITEM_NAME
	, ITEM_PRICE
	, ITEM_INTRO
	, ITEM_PRICE * CART_CNT TOTAL_PRICE
	-- 장바구니 주인의 회원 정보 조회
	, MEMBER_NAME
	, MEMBER_TEL
	, CONCAT(POST_CODE, ' ', MEMBER_ADDR, ' ', ADDR_DETAIL) ADDRESS
	-- 상품 이미지
	, ATTACHED_FILE_NAME
	, ORIGIN_FILE_NAME
	, IS_MAIN
	, IMG_CODE
	-- 상품 카테고리
	, ITEM.CATE_CODE
	, CATE_NAME
FROM shop_cart CART 
INNER JOIN shop_item ITEM
ON CART.ITEM_CODE = ITEM.ITEM_CODE
INNER JOIN shop_member MEMBER
ON CART.MEMBER_ID = MEMBER.MEMBER_ID
INNER JOIN item_image IMG
ON ITEM.ITEM_CODE = IMG.ITEM_CODE
INNER JOIN item_category CATE
ON ITEM.CATE_CODE = CATE.CATE_CODE
WHERE IS_MAIN = 'Y';

	
-- 15514 울산남구 그린아파트 111동
SELECT POST_CODE
	, MEMBER_ADDR
	, ADDR_DETAIL
	, CONCAT(POST_CODE, ' ', MEMBER_ADDR, ' ', ADDR_DETAIL)
FROM shop_member;

SELECT * FROM shop_cart;

SELECT * FROM cart_view;

-- 내 장바구니에 지금 추가하려는 상품이 있는지 확인

-- 아이디가 'JAVA'인 회원의 장바구니에 
-- ITEM_CODE가 1인 상품이 있는지 확인
SELECT COUNT(CART_CODE) 
FROM shop_cart
WHERE MEMBER_ID = 'admin'
AND ITEM_CODE = 5; 

DELETE 
FROM shop_cart;

COMMIT;

-- 다중 삭제
DELETE FROM shop_cart
WHERE CART_CODE = 1 OR CART_CODE = 2 OR CART_CODE = 3;

DELETE FROM shop_cart
WHERE CART_CODE IN (1, 2, 3);

SELECT ITEM_CODE
	, CART_CNT
	, TOTAL_PRICE
FROM cart_view
WHERE CART_CODE = 8;

IFNULL(MAX(BUY_CODE), 0) + 1 FROM shop_buy;

SELECT *
FROM shop_buy;

SELECT *
FROM buy_detail;

DELETE
FROM shop_buy;

DELETE
FROM buy_detail;

-- 구매 날짜 및 총 구매 금액
SELECT BUY_DATE
	, BUY_PRICE
FROM shop_buy
ORDER BY BUY_DATE DESC;

-- 상품코드, 상품명, 대표이미지명, 구매 수량, 구매 가격
SELECT BUY.BUY_CODE 
	, ITEM.ITEM_CODE
	, ITEM_NAME 
	, BUY_CNT
	, TOTAL_PRICE
	, ATTACHED_FILE_NAME
	, BUY_DATE
	, BUY_PRICE
FROM buy_detail DETAIL INNER JOIN shop_item ITEM
ON DETAIL.ITEM_CODE = ITEM.ITEM_CODE
INNER JOIN item_image IMAGE
ON DETAIL.ITEM_CODE = IMAGE.ITEM_CODE
INNER JOIN shop_buy BUY
ON BUY.BUY_CODE = DETAIL.BUY_CODE
WHERE IS_MAIN = 'Y'
AND BUY.BUY_CODE = '1'; 

SELECT BUY_CODE
	, ITEM_CODE
	, (SELECT ITEM_NAME 
		FROM shop_item 
		WHERE ITEM_CODE = buy_detail.ITEM_CODE) ITEM_NAME
	, BUY_CNT
	, TOTAL_PRICE
	, (SELECT ATTACHED_FILE_NAME 
		FROM ITEM_IMAGE 
		WHERE ITEM_CODE = BUY_DETAIL.ITEM_CODE 
		AND IS_MAIN = 'Y') ATTACHED_FILE_NAME
	, (SELECT BUY_DATE 
		FROM shop_buy 
		WHERE BUY_CODE = BUY_DETAIL.BUY_CODE) BUY_DATE
	, (SELECT BUY_PRICE
		FROM SHOP_BUY
		WHERE BUY_CODE = buy_detail.BUY_CODE) BUY_PRICE
FROM buy_detail;

COMMIT;

-- 2024.02.06일 구매 정보 조회
SELECT *
FROM shop_buy
WHERE DATE_FORMAT(BUY_DATE, '%Y-%m-%d') = '2024-02-06';

-- 문자열 -> 날짜, 날짜 -> 문자열
-- SELECT NOW()
-- , STR_TO_DATE('2024-01-01', '%Y-%m-%d') date;
 
-- 날짜 -> 문자열
SELECT BUY_DATE
	, DATE_FORMAT(BUY_DATE, '%Y-%m-%d')
	, DATE_FORMAT(BUY_DATE, '%Y-%m-%d %h:%i:%s')
	, DATE_FORMAT(BUY_DATE, '%Y')
FROM shop_buy;